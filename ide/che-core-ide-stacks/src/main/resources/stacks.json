[
  {
    "id": "simple-theia-docker",
    "creator": "ide",
    "name": "Theia IDE on docker",
    "description": "Theia in a sidecar container (docker)",
    "scope": "general",
    "tags": [
      "Theia",
      "CentOS"
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "theia": {
              "servers": {
                "theia": {
                  "attributes": {
                    "type": "ide"
                  },
                  "protocol": "http",
                  "port": "3000",
                  "path": "/"
                },
                "theia-dev": {
                  "attributes": {
                    "type": "ide-dev"
                  },
                  "protocol": "http",
                  "port": "3030"
                }
              },
              "installers": [],
              "volumes": {
                "projects": {
                  "path": "/projects"
                }
              },
              "env": {
                "CHE_MACHINE_NAME": "theia",
                "HOSTED_PLUGIN_HOSTNAME": "0.0.0.0"
              },
              "attributes": {
                "memoryLimitBytes": "2147483648"
              }
            },
            "machine-exec": {
              "servers": {
                "machine-exec": {
                  "attributes": {
                    "type": "terminal"
                  },
                  "protocol": "ws",
                  "port": "4444"
                }
              },
              "installers": []
            }
          },
          "recipe": {
            "contentType": "application/x-yaml",
            "type": "compose",
            "content": "services:\n  machine-exec:\n    image: 'wsskeleton/che-machine-exec:latest'\n    mem_limit: 536870912\n  theia:\n    image: 'eclipse/che-theia:0.3.14-nightly'\n    mem_limit: 1073741824\n    depends_on:\n      - machine-exec\n"
          }
        }
      },
      "defaultEnv": "default",
      "name": "theia",
      "projects": [],
      "commands": []
    },
    "stackIcon": {
      "name": "type-theia.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "java-theia-openshift",
    "creator": "ide",
    "name": "Java Theia on OpenShift",
    "description": "Che development + Theia in a sidecar container (openshift)",
    "scope": "general",
    "tags": [
      "Java 1.8",
      "Theia",
      "Alpine",
      "CentOS"
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "ws/theia": {
              "attributes": {},
              "servers": {
                "theia": {
                  "protocol": "http",
                  "port": "3000",
                  "path": "/",
                  "attributes": {
                    "type": "ide",
                    "cookiesAuthEnabled": "true",
                    "secure": "true"
                  }
                },
                "theia-dev": {
                  "protocol": "http",
                  "port": "3030",
                  "attributes": {
                    "type": "ide-dev"
                  }
                }
              },
              "volumes": {
                "projects": {
                  "path": "/projects"
                }
              },
              "installers": [],
              "env": {
                "HOSTED_PLUGIN_HOSTNAME": "0.0.0.0"
              }
            },
            "ws/dev": {
              "attributes": {},
              "servers": {},
              "volumes": {
                "projects": {
                  "path": "/projects"
                }
              },
              "installers": [],
              "env": {}
            },
            "ws/machine-exec": {
              "servers": {
                "machine-exec": {
                  "attributes": {
                    "type": "terminal"
                  },
                  "protocol": "ws",
                  "port": "4444"
                }
              },
              "installers": []
            }
          },
          "recipe": {
            "type": "openshift",
            "content": "---\nkind: List\nitems:\n - \n  apiVersion: v1\n  kind: Pod\n  metadata:\n   name: ws\n  spec:\n   containers:\n    - \n     image: 'eclipse/che-theia:0.3.14-nightly'\n     name: theia\n     mem_limit: 1073741824\n     resources:\n      limits:\n       memory: 1024Mi\n    - \n     image: 'eclipse/che-dev:nightly'\n     name: dev\n     mem_limit: 1073741824\n     resources:\n      limits:\n       memory: 1536Mi\n    - \n     image: 'wsskeleton/che-machine-exec:latest'\n     name: machine-exec\n     mem_limit: 536870912\n     resources:\n      limits:\n       memory: 512Mi\n",
            "contentType": "application/x-yaml"
          }
        }
      },
      "defaultEnv": "default",
      "name": "theia",
      "projects": [],
      "commands": []
    },
    "stackIcon": {
      "name": "type-theia.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "wsnext-helloworld-openshift",
    "creator": "ide",
    "name": "Workspace Next HelloWorld example on OpenShift",
    "description": "Example of a Theia Hello World plug-in + Theia plug-in (openshift)",
    "scope": "general",
    "tags": [
      "ws.next",
      "Theia"
    ],
    "workspaceConfig": {
      "defaultEnv": "default",
      "environments": {
        "default": {
          "machines": {
            "ws/dev": {
              "attributes": {},
              "servers": {},
              "volumes": {
                "projects": {
                  "path": "/projects"
                }
              },
              "installers": [],
              "env": {}
            }
          },
          "recipe": {
            "type": "openshift",
            "content": "---\nkind: List\nitems:\n-\n  apiVersion: v1\n  kind: Pod\n  metadata:\n    name: ws\n  spec:\n    containers:\n      -\n        image: eclipse/che-dev:nightly\n        name: dev",
            "contentType": "application/x-yaml"
          }
        }
      },
      "projects": [],
      "name": "skeleton",
      "attributes": {
        "editor": "org.eclipse.che.editor.theia:1.0.0",
        "plugins": "che-dummy-plugin:0.0.1,che-machine-exec-plugin:0.0.1"
      },
      "commands": [],
      "links": []
    },
    "stackIcon": {
      "name": "type-theia.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "wsnext-service-openshift",
    "creator": "ide",
    "name": "Workspace Next REST Service Example on OpenShift",
    "description": "Example of a Theia REST Service plug-in + REST server container + Theia plug-in (openshift)",
    "scope": "general",
    "tags": [
      "ws.next",
      "Theia"
    ],
    "workspaceConfig": {
      "defaultEnv": "default",
      "environments": {
        "default": {
          "machines": {
            "ws/dev": {
              "attributes": {},
              "servers": {},
              "volumes": {
                "projects": {
                  "path": "/projects"
                }
              },
              "installers": [],
              "env": {}
            }
          },
          "recipe": {
            "type": "openshift",
            "content": "---\nkind: List\nitems:\n-\n  apiVersion: v1\n  kind: Pod\n  metadata:\n    name: ws\n  spec:\n    containers:\n      -\n        image: eclipse/che-dev:nightly\n        name: dev",
            "contentType": "application/x-yaml"
          }
        }
      },
      "projects": [],
      "name": "skeleton",
      "attributes": {
        "editor": "org.eclipse.che.editor.theia:1.0.0",
        "plugins": "che-service-plugin:0.0.1,che-machine-exec-plugin:0.0.1"
      },
      "commands": [],
      "links": []
    },
    "stackIcon": {
      "name": "type-theia.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "java-centos-mysql",
    "creator": "ide",
    "name": "Java-MySQL CentOS",
    "description": "Multi-machine environment with Java CentOS and MySQL database",
    "scope": "advanced",
    "tags": [
      "Java 1.8, Tomcat 8, MySQL 5.7"
    ],
    "components": [],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "tomcat8" : {
                  "port" : "8080",
                  "protocol" : "http"
                },
                "tomcat8-debug" : {
                  "port" : "8000",
                  "protocol" : "http"
                }
              },
              "attributes" : {}
            },
            "db": {
              "installers": [
                "org.eclipse.che.terminal",
                "org.eclipse.che.exec"
              ],
              "servers": {
                "mysql" : {
                  "port" : "3306",
                  "protocol" : "tcp"
                }
              },
              "attributes" : {}
            }
          },
          "recipe": {
            "content": "services:\n db:\n  image: centos/mysql-57-centos7\n  environment:\n   MYSQL_ROOT_PASSWORD: password\n   MYSQL_DATABASE: petclinic\n   MYSQL_USER: petclinic\n   MYSQL_PASSWORD: password\n  mem_limit: 1073741824\n dev-machine:\n  image: eclipse/centos_jdk8\n  mem_limit: 2147483648\n  depends_on:\n    - db",
            "contentType": "application/x-yaml",
            "type": "compose"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [
        {
          "commandLine": "mvn clean install -f ${current.project.path}",
          "name": "build",
          "type": "mvn"
        },
        {
          "commandLine": "mysql -u $MYSQL_USER -p$MYSQL_PASSWORD -e 'show databases;'",
          "name": "show databases",
          "type": "custom"
        }
      ]
    },
    "stackIcon": {
      "name": "type-java-mysql.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "java-mysql",
    "creator": "ide",
    "name": "Java-MySQL",
    "description": "Multi-machine environment with Default Java Stack and MySQL database",
    "scope": "general",
    "tags": [
      "Java 1.8, Tomcat 8, MySQL 5.7"
    ],
    "components": [
      {
        "name": "Ubuntu",
        "version": "16.04"
      },
      {
        "name": "JDK",
        "version": "1.8.0_162"
      },
      {
        "name": "Maven",
        "version": "3.3.9"
      },
      {
        "name": "Tomcat",
        "version": "8.0.24"
      },
      {
        "name": "MySQL",
        "version": "5.7.19"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "tomcat8" : {
                  "port" : "8080",
                  "protocol" : "http"
                },
                "tomcat8-debug" : {
                  "port" : "8000",
                  "protocol" : "http"
                },
                "codeserver" : {
                  "port" : "9876",
                  "protocol" : "http"
                }
              },
              "attributes" : {}
            },
            "db": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal"
              ],
              "servers": {
                "mysql" : {
                  "port" : "3306",
                  "protocol" : "tcp"
                }
              },
              "attributes" : {}
            }
          },
          "recipe": {
            "content": "services:\n db:\n  image: eclipse/mysql\n  environment:\n   MYSQL_ROOT_PASSWORD: password\n   MYSQL_DATABASE: petclinic\n   MYSQL_USER: petclinic\n   MYSQL_PASSWORD: password\n  mem_limit: 1073741824\n dev-machine:\n  image: eclipse/ubuntu_jdk8\n  mem_limit: 2147483648\n  depends_on:\n    - db",
            "contentType": "application/x-yaml",
            "type": "compose"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [
        {
          "commandLine": "mysql -u $MYSQL_USER -p$MYSQL_PASSWORD -e 'show databases;'",
          "name": "show databases",
          "type": "custom"
        }
      ]
    },
    "stackIcon": {
      "name": "type-java-mysql.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "java-default",
    "creator": "ide",
    "name": "Java",
    "description": "Default Java Stack with JDK 8, Maven and Tomcat.",
    "scope": "general",
    "tags": [
      "Java",
      "JDK",
      "Maven",
      "Tomcat"
    ],
    "components": [
      {
        "name": "Ubuntu",
        "version": "16.04"
      },
      {
        "name": "JDK",
        "version": "1.8.0_162"
      },
      {
        "name": "Maven",
        "version": "3.3.9"
      },
      {
        "name": "Tomcat",
        "version": "8.0.24"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "tomcat8" : {
                  "port" : "8080",
                  "protocol" : "http"
                },
                "tomcat8-debug" : {
                  "port" : "8000",
                  "protocol" : "http"
                },
                "codeserver" : {
                  "port" : "9876",
                  "protocol" : "http"
                }
              },
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "eclipse/ubuntu_jdk8",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [
        {
          "commandLine": "mvn clean install -f ${current.project.path}",
          "name": "build",
          "type": "mvn",
          "attributes": {
            "previewUrl": "",
            "goal": "Build"
          }
        }
      ]
    },
    "stackIcon": {
      "name": "type-java.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "blank-default",
    "creator": "ide",
    "name": "Blank",
    "description": "Default Blank Stack.",
    "scope": "general",
    "tags": [
      "Blank",
      "Ubuntu",
      "Git"
    ],
    "components": [
      {
        "name": "Ubuntu",
        "version": "16.04"
      },
      {
        "name": "JDK",
        "version": "1.8.0_162"
      },
      {
        "name": "Maven",
        "version": "3.3.9"
      },
      {
        "name": "Tomcat",
        "version": "8.0.24"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "tomcat8" : {
                  "port" : "8080",
                  "protocol" : "http"
                },
                "tomcat8-debug" : {
                  "port" : "8000",
                  "protocol" : "http"
                }
              },
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "eclipse/ubuntu_jdk8",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null
    },
    "stackIcon": {
      "name": "type-blank.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "android-default",
    "creator": "ide",
    "name": "Android",
    "description": "Default Android Stack with Java 1.8 and Android SDK",
    "scope": "general",
    "tags": [
      "Android"
    ],
    "components": [
      {
        "name": "Centos",
        "version": "7"
      },
      {
        "name": "JDK",
        "version": "1.8.0_144"
      },
      {
        "name": "Maven",
        "version": "3.5.3"
      },
      {
        "name": "Android API",
        "version": "21"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "VNC" : {
                  "port" : "6091",
                  "protocol" : "http"
                }
              },
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "eclipse/android",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [
        {
          "commandLine": "mvn clean install -f ${current.project.path}",
          "name": "build",
          "type": "mvn",
          "attributes": {
            "previewUrl": "",
            "goal": "Build"
          }
        }
      ]
    },
    "stackIcon": {
      "name": "type-android.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "cpp-default",
    "creator": "ide",
    "name": "C++",
    "description": "Default C++ Stack with C++, gcc 4.8.4, GNU Make 3.81.",
    "scope": "general",
    "tags": [
      "C++",
      "gcc",
      "make"
    ],
    "components": [
      {
        "name": "Ubuntu",
        "version": "16.04"
      },
      {
        "name": "JDK",
        "version": "1.8.0_162"
      },
      {
        "name": "G++",
        "version": "5.4.0"
      },
      {
        "name": "GCC",
        "version": "5.4.0"
      },
      {
        "name": "Make",
        "version": "4.1"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent"
              ],
              "servers": {},
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "eclipse/cpp_gcc",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [
        {
          "name": "run",
          "type": "custom",
          "commandLine": "cd ${current.project.path} && make && ./a.out",
          "attributes": {
            "previewUrl": "",
            "goal": "Run"
          }
        }
      ]
    },
    "stackIcon": {
      "name": "type-cpp.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "dotnet-default",
    "creator": "ide",
    "name": ".NET",
    "description": "Default .NET 2.0.0 Stack with .NET Core SDK",
    "scope": "general",
    "tags": [
      "Dotnet"
    ],
    "components": [
      {
        "name": "Ubuntu",
        "version": "16.04"
      },
      {
        "name": "Dotnet",
        "version": "2.0.0"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent", "org.eclipse.che.ls.csharp"
              ],
              "servers": {
                "dotnet" : {
                  "port" : "5000",
                  "protocol" : "http"
                }
              },
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "eclipse/dotnet_core",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [
        {
          "name": "update dependencies",
          "type": "custom",
          "commandLine": "cd ${current.project.path} && dotnet restore",
          "attributes": {
            "previewUrl": "",
            "goal": "Build"
          }
        },
        {
          "name": "run",
          "type": "custom",
          "commandLine": "cd ${current.project.path} && dotnet run",
          "attributes": {
            "previewUrl": "${server.dotnet}",
            "goal": "Run"
          }
        }
      ]
    },
    "stackIcon": {
      "name": "type-dotnet.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "go-default",
    "creator": "ide",
    "name": "Go",
    "description": "Default Go Stack with Go 1.10.2",
    "scope": "general",
    "tags": [
      "Go"
    ],
    "components": [
      {
        "name": "Ubuntu",
        "version": "16.04"
      },
      {
        "name": "Go",
        "version": "1.10.2"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent", "org.eclipse.che.ls.golang"
              ],
              "servers": {
                "8080/tcp" : {
                  "port" : "8080",
                  "protocol" : "http"
                }
              },
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "eclipse/ubuntu_go",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [
        {
          "name": "run",
          "type": "custom",
          "commandLine": "cd ${current.project.path} && go get -d && go run main.go",
          "attributes": {
            "previewUrl": "${server.8080/tcp}",
            "goal": "Run"
          }
        },
        {
          "name": "test",
          "type": "custom",
          "commandLine": "cd ${current.project.path} && go get -d && go test",
          "attributes": {
            "previewUrl": "${server.8080/tcp}",
            "goal": "Test"
          }
        },
        {
          "name": "build",
          "type": "custom",
          "commandLine": "cd ${current.project.path} && go get -d && go build",
          "attributes": {
            "previewUrl": "${server.8080/tcp}",
            "goal": "Build"
          }
        }
      ]
    },
    "stackIcon": {
      "name": "type-go.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "node-default",
    "creator": "ide",
    "name": "Node",
    "description": "Default Node Stack with Node 8",
    "scope": "general",
    "tags": [
      "Node.JS",
      "NPM",
      "Gulp",
      "Bower",
      "Grunt",
      "Yeoman",
      "Angular",
      "Karma"
    ],
    "components": [
      {
        "name": "Ubuntu",
        "version": "16.04"
      },
      {
        "name": "NodeJS",
        "version": "8.11.2"
      },
      {
        "name": "NPM",
        "version": "5.6.0"
      },
      {
        "name": "Typerscript",
        "version": "2.8.3"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "3000/tcp" : {
                  "port" : "3000",
                  "protocol" : "http"
                },
                "5000/tcp" : {
                  "port" : "5000",
                  "protocol" : "http"
                },
                "9000/tcp" : {
                  "port" : "9000",
                  "protocol" : "http"
                }
              },
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "eclipse/node",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null
    },
    "stackIcon": {
      "name": "type-node.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "php-default",
    "creator": "ide",
    "name": "PHP",
    "description": "Default PHP Stack with PHP 7.0, most popular extensions.",
    "scope": "general",
    "tags": [
      "PHP",
      "mysql",
      "sqlite",
      "Apache"
    ],
    "components": [
      {
        "name": "Ubuntu",
        "version": "16.04"
      },
      {
        "name": "PHP",
        "version": "7.0.30"
      },
      {
        "name": "Composer",
        "version": "1.6.5"
      },
      {
        "name": "MySQL",
        "version": "5.7.22"
      },
      {
        "name": "Zend Debugger",
        "version": "9.0.1"
      },
      {
        "name": "Apache",
        "version": "2.4.18"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent", "org.eclipse.che.ls.php", "org.eclipse.che.ls.json"
              ],
              "servers": {
                "8080/tcp": {
                  "port": "8080",
                  "protocol": "http"
                },
                "8000/tcp": {
                  "port": "8000",
                  "protocol": "http"
                },
                "80/tcp": {
                  "port": "80",
                  "protocol": "http"
                }
              },
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "eclipse/php",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [
        {
          "name": "run php script",
          "type": "custom",
          "commandLine": "[ -z ${editor.current.file.path} ] && echo \"Open a PHP file in the editor before executing this command.\" || php ${editor.current.file.path}",
          "attributes": {
            "previewUrl": "",
            "goal": "Run"
          }
        },
        {
          "name": "debug php script",
          "type": "custom",
          "commandLine": "[ -z ${editor.current.file.path} ] && echo \"Open a PHP file in the editor before executing this command.\" || QUERY_STRING=\"start_debug=1&debug_host=localhost&debug_port=10137\" php ${editor.current.file.path}",
          "attributes": {
            "previewUrl": "",
            "goal": "Debug"
          }
        },
        {
          "name": "start apache",
          "type": "custom",
          "commandLine": "service apache2 start && tail -f /var/log/apache2/access.log -f /var/log/apache2/error.log",
          "attributes": {
            "previewUrl": "${server.80/tcp}/${current.project.relpath}",
            "goal": "Run"
          }
        },
        {
          "name": "stop apache",
          "type": "custom",
          "commandLine": "service apache2 stop",
          "attributes": {
            "previewUrl": "",
            "goal": "Run"
          }
        },
        {
          "name": "restart apache",
          "type": "custom",
          "commandLine": "service apache2 restart",
          "attributes": {
            "previewUrl": "${server.80/tcp}/${current.project.relpath}",
            "goal": "Run"
          }
        }
      ]
    },
    "stackIcon": {
      "name": "type-php.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "python-default",
    "creator": "ide",
    "name": "Python",
    "description": "Default Python Stack with Python 3.5.1, pip 8.1.1.",
    "scope": "general",
    "tags": [
      "Python 3.5",
      "pip"
    ],
    "components": [
      {
        "name": "Ubuntu",
        "version": "16.04"
      },
      {
        "name": "Python",
        "version": "3.5.1"
      },
      {
        "name": "PIP",
        "version": "10.0.1"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent", "org.eclipse.che.ls.python"
              ],
              "servers": {
                "8080/tcp" : {
                  "port" : "8080",
                  "protocol" : "http"
                },
                "8000/tcp" : {
                  "port" : "8000",
                  "protocol" : "http"
                }
              },
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "eclipse/ubuntu_python:latest",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [
        {
          "name": "run",
          "type": "custom",
          "commandLine": "cd ${current.project.path} && python main.py",
          "attributes": {
            "previewUrl": "",
            "goal": "Run"
          }
        }
      ]
    },
    "stackIcon": {
      "name": "type-python.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "rails-default",
    "creator": "ide",
    "name": "Rails",
    "description": "Default Rails Stack with Ruby 2.4.4, Rails 5.0.1, Bundler 1.16.2.",
    "scope": "general",
    "tags": [
      "Ruby",
      "Rails",
      "Bundler"
    ],
    "components": [
      {
        "name": "Ubuntu",
        "version": "16.04"
      },
      {
        "name": "Ruby",
        "version": "2.4.4"
      },
      {
        "name": "Rails",
        "version": "5.0.1"
      },
      {
        "name": "Bundler",
        "version": "1.16.2"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "3000/tcp" : {
                  "port" : "3000",
                  "protocol" : "http"
                }
              },
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "eclipse/ruby_rails",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [
        {
          "name": "install dependencies",
          "type": "custom",
          "commandLine": "cd ${current.project.path} && bundle install",
          "attributes": {
            "previewUrl": "",
            "goal": "Build"
          }
        },
        {
          "name": "run",
          "type": "custom",
          "commandLine": "cd ${current.project.path} && rails server -b 0.0.0.0",
          "attributes": {
            "previewUrl": "${server.3000/tcp}",
            "goal": "Run"
          }
        }
      ]
    },
    "stackIcon": {
      "name": "type-ruby.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "java-centos",
    "creator": "ide",
    "name": "Java CentOS",
    "description": "Java JDK Stack on CentOS.",
    "scope": "advanced",
    "tags": [
      "Java",
      "JDK",
      "Maven"
    ],
    "components": [
      {
        "name": "Centos",
        "version": "7"
      },
      {
        "name": "OpenJDK",
        "version": "1.8.0_144"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "tomcat8" : {
                  "port" : "8080",
                  "protocol" : "http"
                },
                "tomcat8-debug" : {
                  "port" : "8000",
                  "protocol" : "http"
                }
              },
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "eclipse/centos_jdk8",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [
        {
          "commandLine": "mvn clean install -f ${current.project.path}",
          "name": "build",
          "type": "mvn",
          "attributes": {
            "previewUrl": "",
            "goal": "Build"
          }
        }
      ]
    },
    "stackIcon": {
      "name": "type-java.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "vert.x",
    "creator": "Clement Escoffier",
    "name": "Eclipse Vert.x",
    "description": "Eclipse Vert.x Stack on CentOS with OpenJDK and Maven",
    "scope": "advanced",
    "tags": [
      "Vert.x"
    ],
    "components": [
      {
        "name": "CentOS",
        "version": "7"
      },
      {
        "name": "OpenJDK",
        "version": "1.8.0_161"
      },
      {
        "name": "RH-Maven",
        "version": "3.3.9"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec",
                "org.eclipse.che.terminal",
                "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "vertx" : {
                  "port" : "8080",
                  "protocol" : "http"
                },
                "tomcat8-debug" : {
                  "port" : "8000",
                  "protocol" : "http"
                },
                "vertx-debug" : {
                  "port" : "5005",
                  "protocol" : "http"
                }
              },
              "attributes": {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "registry.centos.org/che-stacks/vertx",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [{
        "commandLine": "scl enable rh-maven33 'mvn clean install -f ${current.project.path}'",
        "name": "build",
        "type": "mvn",
        "attributes": {
          "previewUrl": "",
          "goal": "Build"
        }
      }, {
        "commandLine": "scl enable rh-maven33 'mvn compile vertx:run -f ${current.project.path} -Dvertx.disableDnsResolver=true'",
        "name": "run",
        "type": "custom",
        "attributes": {
          "previewUrl": "${server.vertx}",
          "goal": "Run"
        }
      }, {
        "commandLine": "scl enable rh-maven33 'mvn compile vertx:debug -f ${current.project.path} -Dvertx.disableDnsResolver=true'",
        "name": "debug",
        "type": "custom",
        "attributes": {
          "previewUrl": "${server.vertx}",
          "goal": "Debug"
        }
      }]
    },
    "stackIcon": {
      "name": "type-java.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "spring-boot",
    "creator": "Gytis Trikleris",
    "name": "Spring Boot",
    "description": "Spring Boot Stack on CentOS.",
    "scope": "advanced",
    "tags": [
      "Spring Boot"
    ],
    "components": [
      {
        "name": "CentOS",
        "version": "7"
      },
      {
        "name": "OpenJDK",
        "version": "1.8.0_161"
      },
      {
        "name": "RH-Maven",
        "version": "3.3.9"
      }
    ],
    "workspaceConfig": {
      "name": "default",
      "defaultEnv": "default",
      "environments": {
        "default": {
          "recipe": {
            "content": "registry.centos.org/che-stacks/spring-boot",
            "type": "dockerimage"
          },
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec",
                "org.eclipse.che.terminal",
                "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "springboot" : {
                  "port" : "8080",
                  "protocol" : "http"
                },
                "tomcat8-debug" : {
                  "port" : "8000",
                  "protocol" : "http"
                }
              },
              "attributes": {
                "memoryLimitBytes": "2147483648"
              }
            }
          }
        }
      },
      "commands": [
        {
          "commandLine": "scl enable rh-maven33 'mvn install -f ${current.project.path}'",
          "name": "build",
          "type": "mvn",
          "attributes": {
            "previewUrl": "",
            "goal": "Build"
          }
        },
        {
          "commandLine": "scl enable rh-maven33 'mvn clean install -f ${current.project.path}'",
          "name": "clean build",
          "type": "mvn",
          "attributes": {
            "previewUrl": "",
            "goal": "Build"
          }
        },
        {
          "commandLine": "scl enable rh-maven33 'mvn compile spring-boot:run -f ${current.project.path}'",
          "name": "run",
          "type": "custom",
          "attributes": {
            "previewUrl": "${server.springboot}",
            "goal": "Run"
          }
        },
        {
          "commandLine": "scl enable rh-maven33 'mvn spring-boot:run -Drun.jvmArguments=\"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\" -f ${current.project.path}'",
          "name": "debug",
          "type": "custom",
          "attributes": {
            "previewUrl": "${server.springboot}",
            "goal": "Debug"
          }
        }
      ]
    },
    "stackIcon": {
      "name": "type-spring-boot.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "name": "CentOS WildFly Swarm",
    "id": "wildfly-swarm",
    "creator": "Dharmit Shah",
    "description": "Eclipse WildFly Swarm Stack on CentOS.",
    "scope": "advanced",
    "tags": [
      "WildFly Swarm"
    ],
    "components": [
      {
        "name": "CentOS",
        "version": "7"
      },
      {
        "name": "OpenJDK",
        "version": "1.8.0_161"
      },
      {
        "name": "RH-Maven",
        "version": "3.3.9"
      }
    ],
    "workspaceConfig": {
      "name": "default",
      "environments": {
        "default": {
          "recipe": {
            "content": "registry.centos.org/che-stacks/wildfly-swarm",
            "type": "dockerimage"
          },
          "machines": {
            "dev-machine": {
              "attributes": {
                "memoryLimitBytes": "2147483648"
              },
              "installers": [
                "org.eclipse.che.exec",
                "org.eclipse.che.terminal",
                "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "wildfly" : {
                  "port" : "8080",
                  "protocol" : "http"
                },
                "tomcat8-debug" : {
                  "port" : "8000",
                  "protocol" : "http"
                }
              }
            }
          }
        }
      },
      "commands": [
        {
          "name": "build",
          "type": "mvn",
          "attributes": {
            "previewUrl": "",
            "goal": "Build"
          },
          "commandLine": "export MAVEN_OPTS='-Xms20m'\nscl enable rh-maven33 'mvn clean install -f ${current.project.path} -DskipTests'"
        },
        {
          "name": "run",
          "type": "custom",
          "attributes": {
            "previewUrl": "${server.wildfly}",
            "goal": "Run"
          },
          "commandLine": "cd ${current.project.path}\nscl enable rh-maven33 'java -jar target/*-thorntail.jar -Djava.net.preferIPv4Stack=true'"
        }
      ],
      "projects": [],
      "defaultEnv": "default",
      "links": []
    }
  },
  {
    "name": "CentOS nodejs",
    "id": "nodejs6",
    "scope": "advanced",
    "description": "CentOS Node Stack",
    "tags": [
      "CentOS",
      "Git",
      "Node.JS",
      "NPM",
      "Gulp",
      "Bower",
      "Grunt",
      "Yeoman",
      "Angular",
      "Karma"
    ],
    "workspaceConfig": {
      "name": "default",
      "environments": {
        "default": {
          "recipe": {
            "content": "registry.centos.org/che-stacks/centos-nodejs",
            "type": "dockerimage"
          },
          "machines": {
            "dev-machine": {
              "attributes": {
                "memoryLimitBytes": "2147483648"
              },
              "installers": [
                "org.eclipse.che.exec",
                "org.eclipse.che.terminal",
                "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "angular": {
                  "port": "8003",
                  "protocol": "http"
                },
                "3000/tcp": {
                  "port": "3000",
                  "protocol": "http"
                },
                "9000/tcp": {
                  "port": "9000",
                  "protocol": "http"
                },
                "8080/tcp": {
                  "port": "8080",
                  "protocol": "http"
                }
              }
            }
          }
        }
      },
      "commands": [
        {
          "name": "run",
          "type": "custom",
          "attributes": {
            "goal": "Run",
            "previewUrl": "${server.8080/tcp}"
          },
          "commandLine": "cd ${current.project.path} && scl enable rh-nodejs6 'node app.js'"
        }
      ],
      "projects": [],
      "defaultEnv": "default",
      "links": []
    },
    "components": [
      {
        "name": "CentOS",
        "version": "7"
      },
      {
        "name": "OpenJDK",
        "version": "1.8.0_161"
      },
      {
        "name": "RH-Maven",
        "version": "3.3.9"
      },
      {
        "name": "NodeJS",
        "version": "6.11.3"
      },
      {
        "name": "NPM",
        "version": "3.10.9"
      }
    ],
    "creator": "ide"
  },
  {
    "id": "kotlin-default",
    "creator": "ide",
    "name": "Kotlin",
    "description": "Ubuntu based stack with Kotlin 1.2.50-eap-62",
    "scope": "advanced",
    "tags": [
      "Kotlin",
      "Ubuntu"
    ],
    "components": [
      {
        "name": "Ubuntu",
        "version": "16.04"
      },
      {
        "name": "Kotlin",
        "version": "1.2.50-eap-62"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent"
              ],
              "servers": {},
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "eclipse/kotlin",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null
    }
},
{
    "id": "centos-go",
    "creator": "ide",
    "name": "CentOS Go",
    "description": "CentOS based Go Stack",
    "scope": "advanced",
    "tags": [
      "CentOS",
      "Go"
    ],
    "components": [
      {
        "name": "Centos",
        "version": "7"
      },
      {
        "name": "Golang",
        "version": "1.9.4"
      }
    ],
    "workspaceConfig": {
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "installers": [
                "org.eclipse.che.exec", "org.eclipse.che.terminal", "org.eclipse.che.ws-agent"
              ],
              "servers": {
                "8080/tcp" : {
                  "port" : "8080",
                  "protocol" : "http"
                }
              },
              "attributes" : {
                "memoryLimitBytes": "2147483648"
              }
            }
          },
          "recipe": {
            "content": "registry.centos.org/che-stacks/centos-go",
            "type": "dockerimage"
          }
        }
      },
      "name": "default",
      "defaultEnv": "default",
      "description": null,
      "commands": [
        {
          "name": "run",
          "type": "custom",
          "commandLine": "cd ${current.project.path} && go get -d && go run main.go",
          "attributes": {
            "previewUrl": "${server.8080/tcp}",
            "goal": "Run"
          }
        }
      ]
    },
    "stackIcon": {
      "name": "type-go.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
  "id": "centos",
  "creator": "ide",
  "name": "CentOS blank",
  "description": "CentOS Blank Stack",
  "scope": "advanced",
  "tags": [
    "Blank",
    "CentOS"
  ],
  "components": [
    {
      "name": "Centos",
      "version": "7"
    },
    {
      "name": "OpenJDK",
      "version": "1.8.0_161"
    }
  ],
  "workspaceConfig": {
    "environments": {
      "default": {
        "machines": {
          "dev-machine": {
            "installers": [
              "org.eclipse.che.exec",
              "org.eclipse.che.terminal",
              "org.eclipse.che.ws-agent"
            ],
            "servers": {},
            "attributes": {
              "memoryLimitBytes": "2147483648"
            }
          }
        },
        "recipe": {
          "content": "registry.centos.org/che-stacks/centos-stack-base",
          "type": "dockerimage"
        }
      }
    },
    "name": "default",
    "defaultEnv": "default",
    "description": null
  },
  "stackIcon": {
    "name": "type-blank.svg",
    "mediaType": "image/svg+xml"
  }
 },
  {
    "description": "Ceylon stack with Java, JavaScript and Dart backends on CentOS.",
    "creator": "ide",
    "scope": "advanced",
    "name": "Ceylon with Java JavaScript Dart on CentOS",
    "id": "ceylon-java-javascript-dart-centos",
    "components": [
      {
        "name": "Centos",
        "version": "7"
      },
      {
        "name": "Ceylon",
        "version": "1.3.2"
      }
    ],
    "tags": [
      "Ceylon",
      "Dart"
    ],
    "workspaceConfig": {
      "defaultEnv": "default",
      "environments": {
        "default": {
          "machines": {
            "dev-machine": {
              "attributes": {
                "memoryLimitBytes": "2147483648"
              },
              "servers": {
                "tomcat8" : {
                  "port" : "8080",
                  "protocol" : "http"
                },
                "tomcat8-debug" : {
                  "port" : "8000",
                  "protocol" : "http"
                }
              },
              "installers": [
                "org.eclipse.che.exec",
                "org.eclipse.che.terminal",
                "org.eclipse.che.ws-agent",
                "org.eclipse.che.ls.json"
              ]
            }
          },
          "recipe": {
            "content": "registry.centos.org/che-stacks/centos-ceylon-nodejs-dart",
            "type": "dockerimage"
          }
        }
      },
      "projects": [],
      "name": "default",
      "commands": [
        {
          "commandLine": "rm -Rf ${current.project.path}/modules ",
          "name": "clean modules",
          "attributes": {
            "goal": "Build",
            "previewUrl": ""
          },
          "type": "custom"
        },
        {
          "commandLine": "cd ${current.project.path} && ceylon compile",
          "name": "compile for JVM",
          "attributes": {
            "goal": "Build",
            "previewUrl": ""
          },
          "type": "custom"
        },
        {
          "commandLine": "cd ${current.project.path} && ceylon compile-js",
          "name": "compile for JS",
          "attributes": {
            "goal": "Build",
            "previewUrl": ""
          },
          "type": "custom"
        },
        {
          "commandLine": "cd ${current.project.path} && ceylon compile-dart",
          "name": "compile for Dart",
          "attributes": {
            "goal": "Build",
            "previewUrl": ""
          },
          "type": "custom"
        },
        {
          "commandLine": "cd ${current.project.path} && ceylon run",
          "name": "Run on JVM",
          "attributes": {
            "goal": "Run",
            "previewUrl": ""
          },
          "type": "custom"
        },
        {
          "commandLine": "cd ${current.project.path} && ceylon run-js",
          "name": "Run on NodeJS",
          "attributes": {
            "goal": "Run",
            "previewUrl": ""
          },
          "type": "custom"
        },
        {
          "commandLine": "cd ${current.project.path} && ceylon run-dart $(ceylon config get runtool.module)",
          "name": "Run on Dart",
          "attributes": {
            "goal": "Run",
            "previewUrl": ""
          },
          "type": "custom"
        }
      ],
      "links": []
    },
    "stackIcon": {
      "name": "type-ceylon.svg",
      "mediaType": "image/svg+xml"
    }
  },
  {
    "id": "apache-camel-springboot",
    "creator": "Aurélien Pupier",
    "name": "Apache Camel based projects",
    "description": "Stack with environment ready to develop Integration projects with Apache Camel based on SpringBoot.",
    "scope": "advanced",
    "tags": [
      "Apache Camel",
      "Red Hat Fuse",
      "Agile Integration"
    ],
    "workspaceConfig": {
      "defaultEnv": "default",
      "environments": {
        "default": {
          "recipe": {
            "type": "dockerimage",
            "content": "registry.centos.org/che-stacks/spring-boot"
          },
          "machines": {
            "dev-machine": {
              "env": {
              },
              "volumes": {
              },
              "installers": [
                "org.eclipse.che.exec",
                "org.eclipse.che.terminal",
                "org.eclipse.che.ws-agent",
                "org.eclipse.che.ls.camel"
              ],
              "servers": {
                "tomcat8-debug": {
                  "attributes": {
                  },
                  "protocol": "http",
                  "port": "8000"
                },
                "springboot": {
                  "attributes": {
                  },
                  "protocol": "http",
                  "port": "8080"
                }
              },
              "attributes": {
                "memoryLimitBytes": "2147483648"
              }
            }
          }
        }
      },
      "projects": [
      ],
      "commands": [
        {
          "commandLine": "scl enable rh-maven33 'mvn install -f ${current.project.path}'",
          "name": "build",
          "type": "mvn",
          "attributes": {
            "goal": "Build",
            "previewUrl": ""
          }
        },
        {
          "commandLine": "scl enable rh-maven33 'mvn clean install -f ${current.project.path}'",
          "name": "clean build",
          "type": "mvn",
          "attributes": {
            "goal": "Build",
            "previewUrl": ""
          }
        },
        {
          "commandLine": "scl enable rh-maven33 'mvn compile spring-boot:run -f ${current.project.path}'",
          "name": "run",
          "type": "custom",
          "attributes": {
            "goal": "Run",
            "previewUrl": "${server.springboot}"
          }
        },
        {
          "commandLine": "scl enable rh-maven33 'mvn spring-boot:run -Drun.jvmArguments=\"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\" -f ${current.project.path}'",
          "name": "debug",
          "type": "custom",
          "attributes": {
            "goal": "Debug",
            "previewUrl": "${server.springboot}"
          }
        }
      ],
      "name": "default",
      "links": [
      ]
    },
    "components": [
      {
        "version": "7",
        "name": "CentOS"
      },
      {
        "version": "1.8.0_161",
        "name": "OpenJDK"
      },
      {
        "version": "3.3.9",
        "name": "RH-Maven"
      }
    ],
    "stackIcon": {
      "name": "type-apache-camel.svg",
      "mediaType": "image/svg+xml"
    }
  }
]
